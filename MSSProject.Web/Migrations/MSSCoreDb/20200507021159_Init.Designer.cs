// <auto-generated />
using System;
using MSSProject.Web.Areas.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MSSProject.Web.Migrations.MSSCoreDb
{
    [DbContext(typeof(MSSCoreDbContext))]
    [Migration("20200507021159_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MSSProject.Data.Models.Complaint", b =>
                {
                    b.Property<int>("CompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminStatus")
                        .HasColumnType("int");

                    b.Property<string>("ComplaintText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            CompId = 3,
                            AdminStatus = 0,
                            ComplaintText = "It works! It finally works!",
                            CreatorEmail = "bjohnson@pennstatesoft.com",
                            CreatorName = "Bob Johnson",
                            DateCreated = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Response = "Its about damn time!"
                        },
                        new
                        {
                            CompId = 1,
                            AdminStatus = 1,
                            ComplaintText = "The service here sucks, I dont know why I come here. Can I speak to your manager?",
                            CreatorEmail = "dsmith@pennstatesoft.com",
                            CreatorName = "Dave Smith",
                            DateCreated = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            CompId = 2,
                            AdminStatus = 1,
                            ComplaintText = "Justin is a really awesome admin, that Doug guy is not...fire him.",
                            CreatorEmail = "tsawyer@pennstatesoft.com",
                            CreatorName = "Tom Sawyer",
                            DateCreated = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("MSSProject.Data.Models.Meeting", b =>
                {
                    b.Property<int>("MeetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MeetDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialRoom")
                        .HasColumnType("int");

                    b.HasKey("MeetId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            MeetId = 1,
                            MeetDateTime = new DateTime(2020, 6, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = "dsmith",
                            RoomId = 8,
                            SpecialRoom = 1
                        },
                        new
                        {
                            MeetId = 2,
                            MeetDateTime = new DateTime(2020, 6, 5, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = "bjohnson",
                            RoomId = 5,
                            SpecialRoom = 0
                        });
                });

            modelBuilder.Entity("MSSProject.Data.Models.PaymentInfo", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cvv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PayId = 1,
                            BillingZipCode = "12345",
                            CardNumber = "1234567891234567",
                            CardType = "Mastercard",
                            Cvv = "123",
                            ExpirationDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tom",
                            LastName = "Sawyer",
                            OwnerId = "tsawyer"
                        },
                        new
                        {
                            PayId = 2,
                            BillingZipCode = "67890",
                            CardNumber = "9123456789123456",
                            CardType = "Visa",
                            Cvv = "456",
                            ExpirationDate = new DateTime(2022, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bob",
                            LastName = "Johnson",
                            OwnerId = "bjohnson"
                        });
                });

            modelBuilder.Entity("MSSProject.Data.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("MeetingCount")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialRoom")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Green",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 2,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Chicago",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 3,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Las Vegas",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 4,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Red",
                            SpecialRoom = 0
                        },
                        new
                        {
                            RoomId = 5,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Champaigne",
                            SpecialRoom = 0
                        },
                        new
                        {
                            RoomId = 6,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "New York",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 7,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Escape",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 8,
                            Availability = 0,
                            Cost = 50.0,
                            MeetingCount = 0,
                            RoomName = "Detroit",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 9,
                            Availability = 0,
                            Cost = 100.0,
                            MeetingCount = 0,
                            RoomName = "Missing",
                            SpecialRoom = 1
                        },
                        new
                        {
                            RoomId = 10,
                            Availability = 0,
                            Cost = 100.0,
                            MeetingCount = 0,
                            RoomName = "Double",
                            SpecialRoom = 1
                        });
                });

            modelBuilder.Entity("MSSProject.Web.Models.Participant", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MeetingMeetId")
                        .HasColumnType("int");

                    b.Property<int?>("ParticipantListId")
                        .HasColumnType("int");

                    b.HasKey("ListId");

                    b.HasIndex("MeetingMeetId");

                    b.HasIndex("ParticipantListId");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("MSSProject.Web.Models.Participant", b =>
                {
                    b.HasOne("MSSProject.Data.Models.Meeting", null)
                        .WithMany("ParticipantList")
                        .HasForeignKey("MeetingMeetId");

                    b.HasOne("MSSProject.Web.Models.Participant", null)
                        .WithMany("ParticipantList")
                        .HasForeignKey("ParticipantListId");
                });
#pragma warning restore 612, 618
        }
    }
}
